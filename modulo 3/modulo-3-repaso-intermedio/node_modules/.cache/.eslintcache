[{"/home/patri/Escritorio/adalab/ejercicios-de-adalab/modulo 3/modulo-3-repaso-intermedio/src/index.js":"1","/home/patri/Escritorio/adalab/ejercicios-de-adalab/modulo 3/modulo-3-repaso-intermedio/src/components/App.js":"2"},{"size":160,"mtime":1641903386203,"results":"3","hashOfConfig":"4"},{"size":4404,"mtime":1642432711351,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"od7lwg",{"filePath":"8","messages":"9","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"/home/patri/Escritorio/adalab/ejercicios-de-adalab/modulo 3/modulo-3-repaso-intermedio/src/index.js",[],"/home/patri/Escritorio/adalab/ejercicios-de-adalab/modulo 3/modulo-3-repaso-intermedio/src/components/App.js",["11"],"import '../styles/App.scss';\nimport { useEffect, useState } from 'react';\nimport originalData from '../data/originalData.json';\n\nfunction App() {\n  const [data, setData] = useState(originalData); //esta variable de estado es para nuestra lista de contactos\n\n  const [filterContact, setFilterContact] = useState(''); // esta variable de estado es para el input de filtrar por nombre\n\n  const [newContact, setNewContact] = useState(''); //esta variable de estado es para los inputs de nuevo contacto\n\n  //------------------------------------------------------------------------\n  //FUNCION PARA RENDERIZAR LA LISTA DE CONTACTOS y filtrar por nombre\n  const renderContacts = () => {\n    return data\n      .filter((eachContact) => {\n        return eachContact.name\n          .toLocaleLowerCase()\n          .includes(filterContact.toLocaleLowerCase());\n      })\n      .map((eachContact, index) => {\n        return (\n          <li key={index} className=\"contact__item\">\n            <p className=\"contact__name\">\n              <label className=\"contact__label\">Nombre:</label>\n              {eachContact.name}&nbsp;\n              {eachContact.lastname}\n            </p>\n            <p className=\"contact__phone\">\n              <label className=\"contact__label\">Teléfono:</label>\n              <a href={`tel:${eachContact.phone}`} title=\"Pulsa aquí para llamar a Lola\">\n                {eachContact.phone}\n              </a>\n            </p>\n            <p className=\"contact__mail\">\n              <label className=\"contact__label\">Email:</label>\n              <a\n                href={'mailto:' + eachContact.email}\n                title=\"Pulsa aquí para escribir a Lola\"\n              >\n                {eachContact.email}\n              </a>\n            </p>\n          </li>\n        );\n      });\n  };\n  //-----------------------------------------------------------\n  //FUNCION PARA FILTRAR POR NOMBRE\n\n  const handleChangeFilter = (ev) => {\n    setFilterContact(ev.currentTarget.value);\n  };\n  //-------------------------------------------------------------\n  //FUNCION PARA INPUT DE NUEVO CONTACTO Y BOTON AÑADIR\n\n  const handleChangeContact = (ev) => {\n    setNewContact({\n      ...newContact,\n      [ev.currentTarget.id]: ev.currentTarget.value,\n    });\n  };\n\n  const handleClickAdd = () => {\n \n    setData([...data, newContact]);\n    setNewContact({});\n  };\n\n\n//------------------------------------------------------------------\n\n  return (\n    <div className=\"page\">\n      {/* header */}\n      <header className=\"header\">\n        <h1 className=\"header__title\">Mi agenda de contactos</h1>\n        <form onSubmit={(ev) => ev.preventDefault()}>\n          <input\n            id=\"filterSearch\"\n            onChange={handleChangeFilter}\n            className=\"header__search\"\n            autoComplete=\"off\"\n            type=\"search\"\n            name=\"search\"\n            placeholder=\"Filtrar contactos por nombre\"\n          />\n        </form>\n      </header>\n\n      <main>\n        {/* contact list */}\n        <ul className=\"contact__list\">{renderContacts()}</ul>\n\n        {/* new contact */}\n        <form\n          onSubmit={(ev) => ev.preventDefault()}\n          className=\"new-contact__form\"\n        >\n          <h2 className=\"new-contact__title\">Añade un nuevo contacto</h2>\n          <input\n            onChange={handleChangeContact}\n            className=\"new-contact__input\"\n            type=\"text\"\n            name=\"name\"\n            id=\"name\"\n            placeholder=\"Nombre\"\n          />\n          <input\n            onChange={handleChangeContact}\n            className=\"new-contact__input\"\n            type=\"text\"\n            name=\"lastname\"\n            id=\"lastname\"\n            placeholder=\"Apellidos\"\n          />\n          <input\n            onChange={handleChangeContact}\n            className=\"new-contact__input\"\n            type=\"phone\"\n            name=\"phone\"\n            id=\"phone\"\n            placeholder=\"Teléfono\"\n          />\n          <input\n            onChange={handleChangeContact}\n            className=\"new-contact__input\"\n            type=\"email\"\n            name=\"email\"\n            id=\"email\"\n            placeholder=\"Email\"\n          />\n          <input\n            onClick={handleClickAdd}\n            className=\"new-contact__btn\"\n            type=\"submit\"\n            value=\"Añadir\"\n          />\n        </form>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n",{"ruleId":"12","severity":1,"message":"13","line":2,"column":10,"nodeType":"14","messageId":"15","endLine":2,"endColumn":19},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar"]