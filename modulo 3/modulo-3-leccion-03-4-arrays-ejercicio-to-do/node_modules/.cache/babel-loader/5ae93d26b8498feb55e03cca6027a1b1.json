{"ast":null,"code":"var _jsxFileName = \"/home/patri/Escritorio/adalab/ejercicios-de-adalab/modulo 3/modulo-3-leccion-03-4-arrays-ejercicio-to-do/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport '../styles/App.scss';\nimport { useState } from 'react';\nimport originalData from '../data/tasks.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [newTask, setNewTask] = useState(''); // esta variable de estado se crea para ir a単adiendo las nuevas tareas del input\n\n  const [data, setData] = useState(originalData); //esta variable es para nuestra lista de tareas\n  // renderizar titulo y lista de tareas-----------------------------\n  //RECORDATORIO: el ternario lo dejo con === true para verlo bien como ejemplo pero es redundante, no hay que ponerlo\n\n  const renderTitle = text => /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 31\n  }, this);\n\n  const renderTasks = () => {\n    console.log(data);\n    return data.map((eachTask, id) => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: eachTask.completed === true ? 'paint' : '',\n        children: eachTask.task\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }, this);\n    });\n  }; //-------------------------------------------------------------------\n  //A単adir tareas nuevas a la lista: crear variable de estado, y crear nuevo objeto con el spread operator\n\n\n  const handleChangeNew = ev => {\n    setNewTask(ev.currentTarget.value);\n  };\n\n  const handleClickSave = () => {\n    const newObjet = {\n      id: data.length + 1,\n      task: newTask,\n      completed: false\n    };\n    setData([...data, newObjet]);\n    setNewTask('');\n  }; //-------------------------------------------------------------------\n  //Filtrar por nomb\n  //-------------------------------------------------------------------\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        onSubmit: ev => ev.preventDefault(),\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"\",\n          children: \"Filtrar por nombre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"filterTask\",\n          id: \"filterTask\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), renderTitle('Mi lista de tareas')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: renderTasks()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      onSubmit: ev => ev.preventDefault(),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"newTask\",\n        id: \"newTask\",\n        onChange: handleChangeNew,\n        value: newTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClickSave,\n        children: \"Guardar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"fudj1UBdLr3LgBkaETEbEenUVCc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/patri/Escritorio/adalab/ejercicios-de-adalab/modulo 3/modulo-3-leccion-03-4-arrays-ejercicio-to-do/src/components/App.js"],"names":["useState","originalData","App","newTask","setNewTask","data","setData","renderTitle","text","renderTasks","console","log","map","eachTask","id","completed","task","handleChangeNew","ev","currentTarget","value","handleClickSave","newObjet","length","preventDefault"],"mappings":";;;AAAA,OAAO,oBAAP;AACA,SAASA,QAAT,QAAwB,OAAxB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,EAAD,CAAtC,CAFa,CAE+B;;AAC5C,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAiBN,QAAQ,CAACC,YAAD,CAA/B,CAHa,CAGkC;AAK/C;AAEA;;AACF,QAAMM,WAAW,GAAIC,IAAD,iBAAU;AAAA,cAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,UAA9B;;AAEA,QAAMC,WAAW,GAAG,MAAM;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACA,WAAOA,IAAI,CAACO,GAAL,CAAS,CAACC,QAAD,EAAWC,EAAX,KAAgB;AAC9B,0BACE;AAAa,QAAA,SAAS,EAAED,QAAQ,CAACE,SAAT,KAAqB,IAArB,GAA0B,OAA1B,GAAkC,EAA1D;AAAA,kBACGF,QAAQ,CAACG;AADZ,SAASF,EAAT;AAAA;AAAA;AAAA;AAAA,cADF;AAKD,KANM,CAAP;AAOD,GATD,CAbe,CAuBf;AACA;;;AAEA,QAAMG,eAAe,GAAGC,EAAD,IAAO;AAC5Bd,IAAAA,UAAU,CAAEc,EAAE,CAACC,aAAH,CAAiBC,KAAnB,CAAV;AACD,GAFD;;AAGA,QAAMC,eAAe,GAAE,MAAK;AAC1B,UAAMC,QAAQ,GAAG;AACfR,MAAAA,EAAE,EAAET,IAAI,CAACkB,MAAL,GAAY,CADD;AAEfP,MAAAA,IAAI,EAAEb,OAFS;AAGfY,MAAAA,SAAS,EAAE;AAHI,KAAjB;AAOAT,IAAAA,OAAO,CAAE,CAAC,GAAGD,IAAJ,EAAUiB,QAAV,CAAF,CAAP;AACAlB,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GAVD,CA7Be,CA0Cf;AACA;AAEA;;;AAGE,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACE;AAAM,QAAA,MAAM,EAAC,EAAb;AAAgB,QAAA,QAAQ,EAAGc,EAAD,IAAOA,EAAE,CAACM,cAAH,EAAjC;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAkB,UAAA,IAAI,EAAC,YAAvB;AAAoC,UAAA,EAAE,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAKGjB,WAAW,CAAC,oBAAD,CALd;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAA,gBAAKE,WAAW;AAAhB;AAAA;AAAA;AAAA;AAAA,YARF,eASE;AAAM,MAAA,MAAM,EAAC,EAAb;AAAgB,MAAA,QAAQ,EAAGS,EAAD,IAAQA,EAAE,CAACM,cAAH,EAAlC;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AACA,QAAA,IAAI,EAAC,SADL;AAEA,QAAA,EAAE,EAAC,SAFH;AAGA,QAAA,QAAQ,EAAEP,eAHV;AAIA,QAAA,KAAK,EAAEd;AAJP;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAQ,QAAA,OAAO,EAAEkB,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GApEQnB,G;;KAAAA,G;AAsET,eAAeA,GAAf","sourcesContent":["import '../styles/App.scss';\nimport { useState} from 'react';\nimport originalData from '../data/tasks.json'\n\nfunction App() {\n\n  const [newTask, setNewTask] = useState(''); // esta variable de estado se crea para ir a単adiendo las nuevas tareas del input\n  const [data, setData]= useState(originalData); //esta variable es para nuestra lista de tareas\n\n\n  \n\n  // renderizar titulo y lista de tareas-----------------------------\n\n  //RECORDATORIO: el ternario lo dejo con === true para verlo bien como ejemplo pero es redundante, no hay que ponerlo\nconst renderTitle = (text) => <h1>{text}</h1>\n \nconst renderTasks = () => {\n  console.log(data);\n  return data.map((eachTask, id)=>{\n    return (\n      <li key={id} className={eachTask.completed===true?'paint':''}> \n        {eachTask.task}\n      </li>\n    );\n  });\n}\n//-------------------------------------------------------------------\n//A単adir tareas nuevas a la lista: crear variable de estado, y crear nuevo objeto con el spread operator\n\nconst handleChangeNew =(ev)=> {\n  setNewTask (ev.currentTarget.value);\n}\nconst handleClickSave =()=> {\n  const newObjet = {\n    id: data.length+1,\n    task: newTask,\n    completed: false,\n  };\n\n  \n  setData ([...data, newObjet]);\n  setNewTask('');\n};\n\n\n//-------------------------------------------------------------------\n//Filtrar por nomb\n\n//-------------------------------------------------------------------\n\n\n  return (\n    <div>\n      <div className='title'>\n        <form action=\"\" onSubmit={(ev) =>ev.preventDefault()}>\n          <label htmlFor=\"\">Filtrar por nombre</label>\n          <input type=\"text\"name='filterTask' id='filterTask' />\n        </form>\n        {renderTitle('Mi lista de tareas')}\n      </div>\n      <ol>{renderTasks()}</ol>\n      <form action=\"\" onSubmit={(ev) => ev.preventDefault()}>\n        <input type=\"text\" \n        name='newTask'\n        id='newTask' \n        onChange={handleChangeNew} \n        value={newTask} />\n        <button onClick={handleClickSave}>Guardar</button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}